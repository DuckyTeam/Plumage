@use '~@ducky/plumage-tokens/dist/scss/default' as tokens;

// Common styles to all components
// ------------------------------
:host {
  display: block;
}

:host([hidden]) {
  display: none;
}
// END Common styles
// ------------------------------

// Mixins
// ------------------------------
@mixin filled-background($background-color, $border-color, $text-color) {
  background: $background-color;
  border: tokens.$plmg-border-width-s solid $border-color;
  color: $text-color;
}

@mixin outline-background($border-color) {
  background: none;
  border: tokens.$plmg-border-width-s solid $border-color;
}

@mixin outline-text($text-color) {
  color: $text-color;
}

@mixin filled-color {
  &.primary {
    @include filled-background(
      tokens.$plmg-background-primary-strong,
      tokens.$plmg-background-primary-strong,
      tokens.$plmg-text-neutral-inverted
    );
  }
  &.neutral {
    @include filled-background(
      tokens.$plmg-background-neutral,
      tokens.$plmg-border-neutral-weak,
      tokens.$plmg-text-neutral
    );
  }
  &.standout {
    @include filled-background(
      tokens.$plmg-background-standout,
      tokens.$plmg-background-standout,
      tokens.$plmg-text-standout
    );
  }
  &.danger {
    @include filled-background(
      tokens.$plmg-background-danger,
      tokens.$plmg-background-danger,
      tokens.$plmg-text-danger
    );
  }
}

@mixin outline-color-background {
  &.primary {
    @include outline-background(tokens.$plmg-border-primary-strong);
  }
  &.neutral {
    @include outline-background(tokens.$plmg-border-neutral);
  }
  &.standout {
    @include outline-background(tokens.$plmg-border-standout-strong);
  }
  &.danger {
    @include outline-background(tokens.$plmg-border-danger-strong);
  }
}

@mixin outline-color-text {
  &.primary {
    @include outline-text(tokens.$plmg-text-primary-strong);
  }
  &.neutral {
    @include outline-text(tokens.$plmg-text-neutral);
  }
  &.standout {
    @include outline-text(tokens.$plmg-text-standout);
  }
  &.danger {
    @include outline-text(tokens.$plmg-text-danger-strong);
  }
}
// END Mixins
// ------------------------------

// Component style
// ------------------------------
button {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  border: none;

  font-family: tokens.$plmg-font-family-sans;
  font-style: normal;
  font-weight: tokens.$plmg-font-weight-regular;

  // Control: Variant + Colors
  &.filled {
    border-radius: tokens.$plmg-border-radius-s;

    // Control: Colour
    @include filled-color;
  }
  &.filled-round {
    border-radius: tokens.$plmg-border-radius-pill;

    // Control: Colour
    @include filled-color;
  }
  &.outline {
    border-radius: tokens.$plmg-border-radius-s;

    // Control: Colour
    @include outline-color-background;
    @include outline-color-text;
  }
  &.outline-round {
    border-radius: tokens.$plmg-border-radius-pill;

    // Control: Colour
    @include outline-color-background;
    @include outline-color-text;
  }
  &.borderless {
    background: none;
    border: none;

    // Control: Colour
    @include outline-color-text;
  }

  // Control: Size
  &.small {
    padding: tokens.$plmg-spacing-x0-75 tokens.$plmg-spacing-x1;
    font-size: tokens.$plmg-font-size-x0-875;
    line-height: tokens.$plmg-font-lineheight-loose;
  }
  &.medium {
    padding: tokens.$plmg-spacing-x0-75 tokens.$plmg-spacing-x1-5;
    font-size: tokens.$plmg-font-size-x1-125;
    line-height: tokens.$plmg-font-lineheight-loose;
  }
  &.large {
    padding: tokens.$plmg-spacing-x0-75 tokens.$plmg-spacing-x2;
    font-size: tokens.$plmg-font-size-x1-25;
    line-height: tokens.$plmg-font-lineheight-loose;
  }
  &.extra-large {
    padding: tokens.$plmg-spacing-x0-75 tokens.$plmg-spacing-x2-5;
    font-size: tokens.$plmg-font-size-x1-5;
    line-height: tokens.$plmg-font-lineheight-normal;
  }
}
// END Component style
// ------------------------------
