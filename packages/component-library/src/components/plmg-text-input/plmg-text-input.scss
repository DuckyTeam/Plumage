@use '~@ducky/plumage-tokens/dist/scss/default' as tokens;

// Mixins
// ------------------------------
@mixin typography($font-size, $font-weight) {
  font-family: tokens.$plmg-font-family-sans;
  font-style: normal;
  line-height: tokens.$plmg-font-lineheight-loose;
  font-weight: $font-weight;
  font-size: $font-size;
}
@mixin plmg-font-form-text-m {
  @include typography(
    tokens.$plmg-font-size-x1-125,
    tokens.$plmg-font-weight-regular
  );
}
@mixin plmg-font-form-text-l {
  @include typography(
    tokens.$plmg-font-size-x1-25,
    tokens.$plmg-font-weight-regular
  );
}
@mixin plmg-font-form-label-m {
  @include typography(
    tokens.$plmg-font-size-x1,
    tokens.$plmg-font-weight-semibold
  );
}
@mixin plmg-font-form-label-l {
  @include typography(
    tokens.$plmg-font-size-x1_125,
    tokens.$plmg-font-weight-semibold
  );
}
@mixin plmg-font-form-tip-m {
  @include typography(
    tokens.$plmg-font-size-x0-75,
    tokens.$plmg-font-weight-regular
  );
}
@mixin plmg-font-form-tip-l {
  @include typography(
    tokens.$plmg-font-size-x0-875,
    tokens.$plmg-font-weight-regular
  );
}
// END Mixins
// ------------------------------

// Component style
// ------------------------------
.plmg-text-input-wrapper {
  // Controls: Size
  width: 100%;

  &:focus-visible {
    outline: tokens.$plmg-border-width-l solid
      tokens.$plmg-color-border-standout;
    border-radius: tokens.$plmg-border-radius-s;
  }
  input {
    border: none;
    box-sizing: border-box;
    width: 100%;
    outline: tokens.$plmg-border-width-m solid
      tokens.$plmg-color-border-neutral-weak;
    color: tokens.$plmg-color-text-neutral;

    border-radius: tokens.$plmg-border-radius-s;
    background-color: tokens.$plmg-color-background-neutral;

    &.medium {
      @include plmg-font-form-text-m;
      padding: tokens.$plmg-spacing-x0-75 tokens.$plmg-spacing-x1;
    }
    &.large {
      @include plmg-font-form-text-l;
      padding: tokens.$plmg-spacing-x1 tokens.$plmg-spacing-x1-5;
    }
    &:hover &:focus &:focus-visible {
      outline: none;
    }
    // States
    &:hover:not(:focus) {
      background-color: tokens.$plmg-color-background-neutral-hover;
    }
    &:focus {
      outline: tokens.$plmg-border-width-m solid
        tokens.$plmg-color-border-primary;
    }
  }
}

.label {
  color: tokens.$plmg-color-text-neutral-weak;
  &.medium {
    @include plmg-font-form-text-m;
  }
  &.large {
    @include plmg-font-form-text-l;
  }
}

.tip {
  color: tokens.$plmg-color-text-neutral-weak;
  &.medium {
    @include plmg-font-form-tip-m;
  }
  &.large {
    @include plmg-font-form-tip-l;
  }
}

// // END Component style
// // ------------------------------
