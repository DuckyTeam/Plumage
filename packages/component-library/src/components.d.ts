/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { PlmgButtonColor, PlmgButtonDesign, PlmgButtonSize, PlmgButtonType } from "./components/plmg-button/plmg-button.types";
export namespace Components {
    interface PlmgButton {
        /**
          * Define button's color  Allowed values:   - primary   - neutral   - standout   - danger  Default: primary
         */
        "color": PlmgButtonColor;
        /**
          * Define button's design.  Allowed values:   - filled   - filled-round   - outline   - outline-round   - borderless  Default: filled
         */
        "design": PlmgButtonDesign;
        /**
          * Define button's width  Allowed values:   - true   - false  Default: false
         */
        "fullWidth": boolean;
        /**
          * Define button as a link
         */
        "href": string;
        /**
          * Define links rel
         */
        "rel": string;
        /**
          * Define button's shadow  Allowed values:   - true   - false  Default: false
         */
        "shadow": boolean;
        /**
          * Define button's size  Allowed values:   - small   - medium   - large   - extra-large  Default: medium
         */
        "size": PlmgButtonSize;
        /**
          * Define links target
         */
        "target": string;
        /**
          * Define button's type  Allowed values:   - button   - submit   - reset  Default: button
         */
        "type": PlmgButtonType;
    }
    interface PlmgCard {
        /**
          * Define card's bottom button text.  If a text is provided, the button will be displayed. By default, when no text is provided, the button is hidden.
         */
        "bottomButtonText": string | undefined;
        /**
          * Define card's header text.  If a text or an icon is provided, the heading will be displayed. By default, when no text nor icon is provided, the heading is hidden.
         */
        "headerText": string | undefined;
        /**
          * Define card's header icon, used as a top action for the card.  If a text or an icon is provided, the heading will be displayed. By default, when no text nor icon is provided, the heading is hidden.
         */
        "topActionIcon": string | undefined;
    }
    interface PlmgSvgIcon {
        /**
          * Define icon's color.  Can be any valid CSS color value.  By default, the icon will have the same color as the parent's element.
         */
        "color": string | undefined;
        /**
          * Define icon by its name. Name must be one of the existing icon: https://components.ducky.eco/?path=/story/component-svgicon--all-icons  Default: NULL
         */
        "icon": string;
        /**
          * Define the icon's size.  Allowed values: <value><unit>  Examples: - 1em - 42px  Default: 1em
         */
        "size": string;
    }
}
declare global {
    interface HTMLPlmgButtonElement extends Components.PlmgButton, HTMLStencilElement {
    }
    var HTMLPlmgButtonElement: {
        prototype: HTMLPlmgButtonElement;
        new (): HTMLPlmgButtonElement;
    };
    interface HTMLPlmgCardElement extends Components.PlmgCard, HTMLStencilElement {
    }
    var HTMLPlmgCardElement: {
        prototype: HTMLPlmgCardElement;
        new (): HTMLPlmgCardElement;
    };
    interface HTMLPlmgSvgIconElement extends Components.PlmgSvgIcon, HTMLStencilElement {
    }
    var HTMLPlmgSvgIconElement: {
        prototype: HTMLPlmgSvgIconElement;
        new (): HTMLPlmgSvgIconElement;
    };
    interface HTMLElementTagNameMap {
        "plmg-button": HTMLPlmgButtonElement;
        "plmg-card": HTMLPlmgCardElement;
        "plmg-svg-icon": HTMLPlmgSvgIconElement;
    }
}
declare namespace LocalJSX {
    interface PlmgButton {
        /**
          * Define button's color  Allowed values:   - primary   - neutral   - standout   - danger  Default: primary
         */
        "color"?: PlmgButtonColor;
        /**
          * Define button's design.  Allowed values:   - filled   - filled-round   - outline   - outline-round   - borderless  Default: filled
         */
        "design"?: PlmgButtonDesign;
        /**
          * Define button's width  Allowed values:   - true   - false  Default: false
         */
        "fullWidth"?: boolean;
        /**
          * Define button as a link
         */
        "href"?: string;
        /**
          * Define links rel
         */
        "rel"?: string;
        /**
          * Define button's shadow  Allowed values:   - true   - false  Default: false
         */
        "shadow"?: boolean;
        /**
          * Define button's size  Allowed values:   - small   - medium   - large   - extra-large  Default: medium
         */
        "size"?: PlmgButtonSize;
        /**
          * Define links target
         */
        "target"?: string;
        /**
          * Define button's type  Allowed values:   - button   - submit   - reset  Default: button
         */
        "type"?: PlmgButtonType;
    }
    interface PlmgCard {
        /**
          * Define card's bottom button text.  If a text is provided, the button will be displayed. By default, when no text is provided, the button is hidden.
         */
        "bottomButtonText"?: string | undefined;
        /**
          * Define card's header text.  If a text or an icon is provided, the heading will be displayed. By default, when no text nor icon is provided, the heading is hidden.
         */
        "headerText"?: string | undefined;
        /**
          * The event "bottomButtonClicked" is triggered when the bottom button is clicked.
         */
        "onBottomButtonClicked"?: (event: CustomEvent<MouseEvent>) => void;
        /**
          * The event "topActionClicked" is triggered when the top action icon is clicked.
         */
        "onTopActionClicked"?: (event: CustomEvent<MouseEvent>) => void;
        /**
          * Define card's header icon, used as a top action for the card.  If a text or an icon is provided, the heading will be displayed. By default, when no text nor icon is provided, the heading is hidden.
         */
        "topActionIcon"?: string | undefined;
    }
    interface PlmgSvgIcon {
        /**
          * Define icon's color.  Can be any valid CSS color value.  By default, the icon will have the same color as the parent's element.
         */
        "color"?: string | undefined;
        /**
          * Define icon by its name. Name must be one of the existing icon: https://components.ducky.eco/?path=/story/component-svgicon--all-icons  Default: NULL
         */
        "icon"?: string;
        /**
          * Define the icon's size.  Allowed values: <value><unit>  Examples: - 1em - 42px  Default: 1em
         */
        "size"?: string;
    }
    interface IntrinsicElements {
        "plmg-button": PlmgButton;
        "plmg-card": PlmgCard;
        "plmg-svg-icon": PlmgSvgIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "plmg-button": LocalJSX.PlmgButton & JSXBase.HTMLAttributes<HTMLPlmgButtonElement>;
            "plmg-card": LocalJSX.PlmgCard & JSXBase.HTMLAttributes<HTMLPlmgCardElement>;
            "plmg-svg-icon": LocalJSX.PlmgSvgIcon & JSXBase.HTMLAttributes<HTMLPlmgSvgIconElement>;
        }
    }
}
